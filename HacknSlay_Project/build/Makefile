# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = .
  TARGET = $(TARGETDIR)/HnS.exe
  OBJDIR = obj/Debug
  DEFINES += -DGLEW_STATIC -DGLM_FORCE_RADIANS -DGLM_SWIZZLE -DDEBUG
  INCLUDES += -I../src -I../../GlewLib/src -I../../../Libs/glm-0.9.5.4/include -I../../../Libs/gli-0.5.1.0/include -I../../../Libs/InteropAdditions -I../../Libs/SDL2-2.0.3-mingw/x86_64-w64-mingw32/include/SDL2 -I../../../Libs/SDL2-2.0.3-mingw/i686-w64-mingw32/include/SDL2 -I../../Libs/SDL2_mixer-2.0.0-mingw/x86_64-w64-mingw32/include/SDL2 -I../../../Libs/SDL2_mixer-2.0.0-mingw/i686-w64-mingw32/include/SDL2 -I../../HacknSlay_Commons/src
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -Werror -g -msse2 -O0 -std=gnu++1y
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../GlewLib/build/GlewLib.lib
  LDDEPS += ../../GlewLib/build/GlewLib.lib
  ALL_LDFLAGS += $(LDFLAGS) -L../../Libs/SDL2-2.0.3-mingw/x86_64-w64-mingw32/lib -L../../../Libs/SDL2-2.0.3-mingw/i686-w64-mingw32/lib -L../../Libs/SDL2_mixer-2.0.0-mingw/x86_64-w64-mingw32/lib -L../../../Libs/SDL2_mixer-2.0.0-mingw/i686-w64-mingw32/lib -mwindows -lmingw32 ../../GlewLib/build/GlewLib.lib -lopengl32 -lSDL2main -lSDL2 -lSDL2_mixer
  LINKCMD = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	copy ..\..\Libs\SDL2-2.0.3-mingw\x86_64-w64-mingw32\bin\SDL2.dll SDL2.dll
	copy ..\..\Libs\SDL2_mixer-2.0.0-mingw\x86_64-w64-mingw32\bin\*.dll .
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = .
  TARGET = $(TARGETDIR)/HnS.exe
  OBJDIR = obj/Release
  DEFINES += -DGLEW_STATIC -DGLM_FORCE_RADIANS -DGLM_SWIZZLE -DNDEBUG
  INCLUDES += -I../src -I../../GlewLib/src -I../../../Libs/glm-0.9.5.4/include -I../../../Libs/gli-0.5.1.0/include -I../../../Libs/InteropAdditions -I../../Libs/SDL2-2.0.3-mingw/x86_64-w64-mingw32/include/SDL2 -I../../../Libs/SDL2-2.0.3-mingw/i686-w64-mingw32/include/SDL2 -I../../Libs/SDL2_mixer-2.0.0-mingw/x86_64-w64-mingw32/include/SDL2 -I../../../Libs/SDL2_mixer-2.0.0-mingw/i686-w64-mingw32/include/SDL2 -I../../HacknSlay_Commons/src
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -Werror -msse2 -O3 -std=gnu++1y
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../GlewLib/build/GlewLib.lib
  LDDEPS += ../../GlewLib/build/GlewLib.lib
  ALL_LDFLAGS += $(LDFLAGS) -L../../Libs/SDL2-2.0.3-mingw/x86_64-w64-mingw32/lib -L../../../Libs/SDL2-2.0.3-mingw/i686-w64-mingw32/lib -L../../Libs/SDL2_mixer-2.0.0-mingw/x86_64-w64-mingw32/lib -L../../../Libs/SDL2_mixer-2.0.0-mingw/i686-w64-mingw32/lib -s -mwindows -lmingw32 ../../GlewLib/build/GlewLib.lib -lopengl32 -lSDL2main -lSDL2 -lSDL2_mixer
  LINKCMD = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	copy ..\..\Libs\SDL2-2.0.3-mingw\x86_64-w64-mingw32\bin\SDL2.dll SDL2.dll
	copy ..\..\Libs\SDL2_mixer-2.0.0-mingw\x86_64-w64-mingw32\bin\*.dll .
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/camera.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/shader.o \
	$(OBJDIR)/shaderprogram.o \
	$(OBJDIR)/vertexarrayobject.o \
	$(OBJDIR)/vertexbufferobject.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES) ${CUSTOMFILES}
	@echo Linking HnS
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning HnS
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/camera.o: ../src/camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shader.o: ../src/shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shaderprogram.o: ../src/shaderprogram.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vertexarrayobject.o: ../src/vertexarrayobject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vertexbufferobject.o: ../src/vertexbufferobject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif
